"""
This  docstring contains testcases for using 2-matrix_divided.py

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1, 2.0, 3], [4, 5.3, 6]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.3, 6.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 1.0)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1,2,3], [4,5,6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1,2,3], [4,5,6,4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1,2,3], [4,5,"house"]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [1,2,3]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2.0, 3], [4, 5.3, 6]]
>>> matrix_divided(matrix, "string")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2.0, 3], [4, 5.3, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number



"""
